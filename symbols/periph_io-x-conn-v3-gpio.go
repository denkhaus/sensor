// Code generated by 'yaegi extract periph.io/x/conn/v3/gpio'. DO NOT EDIT.

package symbols

import (
	"periph.io/x/conn/v3/gpio"
	"periph.io/x/conn/v3/physic"
	"reflect"
	"time"
)

func init() {
	Symbols["periph.io/x/conn/v3/gpio/gpio"] = map[string]reflect.Value{
		// function, constant and variable definitions
		"BothEdges":    reflect.ValueOf(gpio.BothEdges),
		"CLK":          reflect.ValueOf(gpio.CLK),
		"DutyHalf":     reflect.ValueOf(gpio.DutyHalf),
		"DutyMax":      reflect.ValueOf(gpio.DutyMax),
		"FLOAT":        reflect.ValueOf(gpio.FLOAT),
		"FallingEdge":  reflect.ValueOf(gpio.FallingEdge),
		"Float":        reflect.ValueOf(gpio.Float),
		"High":         reflect.ValueOf(gpio.High),
		"IN":           reflect.ValueOf(gpio.IN),
		"INVALID":      reflect.ValueOf(&gpio.INVALID).Elem(),
		"IN_HIGH":      reflect.ValueOf(gpio.IN_HIGH),
		"IN_LOW":       reflect.ValueOf(gpio.IN_LOW),
		"Low":          reflect.ValueOf(gpio.Low),
		"NoEdge":       reflect.ValueOf(gpio.NoEdge),
		"OUT":          reflect.ValueOf(gpio.OUT),
		"OUT_HIGH":     reflect.ValueOf(gpio.OUT_HIGH),
		"OUT_LOW":      reflect.ValueOf(gpio.OUT_LOW),
		"OUT_OC":       reflect.ValueOf(gpio.OUT_OC),
		"PWM":          reflect.ValueOf(gpio.PWM),
		"ParseDuty":    reflect.ValueOf(gpio.ParseDuty),
		"PullDown":     reflect.ValueOf(gpio.PullDown),
		"PullNoChange": reflect.ValueOf(gpio.PullNoChange),
		"PullUp":       reflect.ValueOf(gpio.PullUp),
		"RisingEdge":   reflect.ValueOf(gpio.RisingEdge),

		// type definitions
		"Duty":    reflect.ValueOf((*gpio.Duty)(nil)),
		"Edge":    reflect.ValueOf((*gpio.Edge)(nil)),
		"Level":   reflect.ValueOf((*gpio.Level)(nil)),
		"PinIO":   reflect.ValueOf((*gpio.PinIO)(nil)),
		"PinIn":   reflect.ValueOf((*gpio.PinIn)(nil)),
		"PinOut":  reflect.ValueOf((*gpio.PinOut)(nil)),
		"Pull":    reflect.ValueOf((*gpio.Pull)(nil)),
		"RealPin": reflect.ValueOf((*gpio.RealPin)(nil)),

		// interface wrapper definitions
		"_PinIO":   reflect.ValueOf((*_periph_io_x_conn_v3_gpio_PinIO)(nil)),
		"_PinIn":   reflect.ValueOf((*_periph_io_x_conn_v3_gpio_PinIn)(nil)),
		"_PinOut":  reflect.ValueOf((*_periph_io_x_conn_v3_gpio_PinOut)(nil)),
		"_RealPin": reflect.ValueOf((*_periph_io_x_conn_v3_gpio_RealPin)(nil)),
	}
}

// _periph_io_x_conn_v3_gpio_PinIO is an interface wrapper for PinIO type
type _periph_io_x_conn_v3_gpio_PinIO struct {
	IValue       interface{}
	WDefaultPull func() gpio.Pull
	WFunction    func() string
	WHalt        func() error
	WIn          func(pull gpio.Pull, edge gpio.Edge) error
	WName        func() string
	WNumber      func() int
	WOut         func(l gpio.Level) error
	WPWM         func(duty gpio.Duty, f physic.Frequency) error
	WPull        func() gpio.Pull
	WRead        func() gpio.Level
	WString      func() string
	WWaitForEdge func(timeout time.Duration) bool
}

func (W _periph_io_x_conn_v3_gpio_PinIO) DefaultPull() gpio.Pull {
	return W.WDefaultPull()
}
func (W _periph_io_x_conn_v3_gpio_PinIO) Function() string {
	return W.WFunction()
}
func (W _periph_io_x_conn_v3_gpio_PinIO) Halt() error {
	return W.WHalt()
}
func (W _periph_io_x_conn_v3_gpio_PinIO) In(pull gpio.Pull, edge gpio.Edge) error {
	return W.WIn(pull, edge)
}
func (W _periph_io_x_conn_v3_gpio_PinIO) Name() string {
	return W.WName()
}
func (W _periph_io_x_conn_v3_gpio_PinIO) Number() int {
	return W.WNumber()
}
func (W _periph_io_x_conn_v3_gpio_PinIO) Out(l gpio.Level) error {
	return W.WOut(l)
}
func (W _periph_io_x_conn_v3_gpio_PinIO) PWM(duty gpio.Duty, f physic.Frequency) error {
	return W.WPWM(duty, f)
}
func (W _periph_io_x_conn_v3_gpio_PinIO) Pull() gpio.Pull {
	return W.WPull()
}
func (W _periph_io_x_conn_v3_gpio_PinIO) Read() gpio.Level {
	return W.WRead()
}
func (W _periph_io_x_conn_v3_gpio_PinIO) String() string {
	if W.WString == nil {
		return ""
	}
	return W.WString()
}
func (W _periph_io_x_conn_v3_gpio_PinIO) WaitForEdge(timeout time.Duration) bool {
	return W.WWaitForEdge(timeout)
}

// _periph_io_x_conn_v3_gpio_PinIn is an interface wrapper for PinIn type
type _periph_io_x_conn_v3_gpio_PinIn struct {
	IValue       interface{}
	WDefaultPull func() gpio.Pull
	WFunction    func() string
	WHalt        func() error
	WIn          func(pull gpio.Pull, edge gpio.Edge) error
	WName        func() string
	WNumber      func() int
	WPull        func() gpio.Pull
	WRead        func() gpio.Level
	WString      func() string
	WWaitForEdge func(timeout time.Duration) bool
}

func (W _periph_io_x_conn_v3_gpio_PinIn) DefaultPull() gpio.Pull {
	return W.WDefaultPull()
}
func (W _periph_io_x_conn_v3_gpio_PinIn) Function() string {
	return W.WFunction()
}
func (W _periph_io_x_conn_v3_gpio_PinIn) Halt() error {
	return W.WHalt()
}
func (W _periph_io_x_conn_v3_gpio_PinIn) In(pull gpio.Pull, edge gpio.Edge) error {
	return W.WIn(pull, edge)
}
func (W _periph_io_x_conn_v3_gpio_PinIn) Name() string {
	return W.WName()
}
func (W _periph_io_x_conn_v3_gpio_PinIn) Number() int {
	return W.WNumber()
}
func (W _periph_io_x_conn_v3_gpio_PinIn) Pull() gpio.Pull {
	return W.WPull()
}
func (W _periph_io_x_conn_v3_gpio_PinIn) Read() gpio.Level {
	return W.WRead()
}
func (W _periph_io_x_conn_v3_gpio_PinIn) String() string {
	if W.WString == nil {
		return ""
	}
	return W.WString()
}
func (W _periph_io_x_conn_v3_gpio_PinIn) WaitForEdge(timeout time.Duration) bool {
	return W.WWaitForEdge(timeout)
}

// _periph_io_x_conn_v3_gpio_PinOut is an interface wrapper for PinOut type
type _periph_io_x_conn_v3_gpio_PinOut struct {
	IValue    interface{}
	WFunction func() string
	WHalt     func() error
	WName     func() string
	WNumber   func() int
	WOut      func(l gpio.Level) error
	WPWM      func(duty gpio.Duty, f physic.Frequency) error
	WString   func() string
}

func (W _periph_io_x_conn_v3_gpio_PinOut) Function() string {
	return W.WFunction()
}
func (W _periph_io_x_conn_v3_gpio_PinOut) Halt() error {
	return W.WHalt()
}
func (W _periph_io_x_conn_v3_gpio_PinOut) Name() string {
	return W.WName()
}
func (W _periph_io_x_conn_v3_gpio_PinOut) Number() int {
	return W.WNumber()
}
func (W _periph_io_x_conn_v3_gpio_PinOut) Out(l gpio.Level) error {
	return W.WOut(l)
}
func (W _periph_io_x_conn_v3_gpio_PinOut) PWM(duty gpio.Duty, f physic.Frequency) error {
	return W.WPWM(duty, f)
}
func (W _periph_io_x_conn_v3_gpio_PinOut) String() string {
	if W.WString == nil {
		return ""
	}
	return W.WString()
}

// _periph_io_x_conn_v3_gpio_RealPin is an interface wrapper for RealPin type
type _periph_io_x_conn_v3_gpio_RealPin struct {
	IValue interface{}
	WReal  func() gpio.PinIO
}

func (W _periph_io_x_conn_v3_gpio_RealPin) Real() gpio.PinIO {
	return W.WReal()
}
